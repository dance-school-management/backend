syntax = "proto3";

package productcommunication;

service EnrollWithProduct {
  rpc CheckClass(CheckClassRequest) returns (CheckResponse) {};
  rpc CheckCourse(CheckCourseRequest) returns (CheckCourseResponse) {};

  rpc GetClassesDetails (ClassIdsRequest) returns (ClassesDetailsResponse);
}

message CheckClassRequest {
  int64 class_id = 1;
};

message CheckCourseRequest {
  int64 course_id = 1;
  int32 group_number = 2;
};

message CheckResponse {
  int32 people_limit = 1;
};

message CheckCourseResponse {
  repeated CheckCourseResponseEntry people_limits = 1;
};

message CheckCourseResponseEntry {
  int64 class_id = 1;
  int32 people_limit = 2;
}


service ProductWithEnroll {
  rpc GetInstructorsClasses (InstructorIdsRequest) returns (InstructorsClassesResponse);
  rpc GetClassesInstructors (ClassIdsRequest) returns (InstructorsClassesResponse);
  rpc EnrollInstructorsInClass (EnrollInstructorsInClassRequest) returns (EnrollInstructorsInClassResponse);

  rpc GetClassesStudents (ClassIdsRequest) returns (StudentsClassesResponse);
  rpc GetStudentClasses (GetStudentClassesRequest) returns (GetStudentClassesResponse);
}

message InstructorIdsRequest {
  repeated string instructor_ids = 1;
};

message ClassIdsRequest {
  repeated int64 class_ids = 1;
};

message ClassIdRequest {
  int64 class_id = 1;
}

message InstructorsClassesResponse {
  repeated InstructorClass instructors_classes_ids = 1;
};

message StudentsClassesResponse {
  repeated StudentClass students_classes_ids = 1;
}

message InstructorClass {
  string instructor_id = 1;
  int64 class_id = 2; 
};

message StudentClass {
  string student_id = 1;
  int64 class_id = 2;
};

message EnrollInstructorsInClassRequest {
  int64 class_id = 1;
  repeated string instructor_ids = 2;
};

message EnrollInstructorsInClassResponse {
  bool success = 1;
};


message GetStudentClassesRequest {
  string student_id = 1;
}

message GetStudentClassesResponse {
  repeated StudentClass student_classes = 1;
}

message ClassDetails {
  int64 class_id = 1;
  string name = 2;
  string description = 3;
  string start_date = 4;
  string end_date = 5;
  string class_room_name = 6;
  optional string dance_category_name = 7;
  optional string advancement_level_name = 8;
}

message ClassesDetailsResponse {
  repeated ClassDetails classesDetails = 1;
}

service DanceCategories {
  rpc GetDanceCategories(GetDanceCategoriesRequest) returns (GetDanceCategoriesResponse);
}

enum Role {
  INSTRUCTOR = 0;
  COORDINATOR = 1;
  STUDENT = 2;
  ADMINISTRATOR = 3;
}


message GetDanceCategoriesRequest {
  repeated int64 id = 1;
}


message DanceCategory {
  int64 id = 1;
  string name = 2;
}

message GetDanceCategoriesResponse {
  repeated DanceCategory dance_categories = 1;
};